global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        #ca-base /etc/ssl/certs
        #crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
        maxconn 2048
        tune.ssl.default-dh-param 2048

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        option forwardfor
        option http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend www_frontend_http
    bind *:80     # Bind to port 80 (www) on the container
    reqadd X-Forwarded-Proto:\ http
    # It matches if the HTTP Host: field mentions any of the hostnames (after the '-i').
    acl host_gitlab hdr(host) -i git.0x07.pl
    acl host_nextcloud hdr(host) -i storage.0x07.pl
    # Redirect the connection to the proper server cluster, depending on the match.
    use_backend web_gitlab if host_gitlab
    use_backend web_nextcloud if host_nextcloud


frontend www-https
    bind *:443 ssl crt /etc/haproxy/0x07.pl.pem
    reqadd X-Forwarded-Proto:\ https
    acl host_gitlab hdr(host) -i git.0x07.pl
    acl host_nextcloud hdr(host) -i storage.0x07.pl
    use_backend web_gitlab if host_gitlab
    use_backend web_nextcloud if host_nextcloud



backend web_gitlab
    redirect scheme https if !{ ssl_fc }
    # We set the X-Client-IP HTTP header. This is useful if we want the web server to know the real client IP.
    http-request set-header X-Client-IP %[src]
    reqirep ^Host: Host:\ gitlab.internal.0x07.pl
    # This backend, named here "web1", directs to container "web1.lxd" (hostname).
    server gitlab gitlab.internal.0x07.pl:80 check

backend web_nextcloud
    redirect scheme https if !{ ssl_fc }
    # We set the X-Client-IP HTTP header. This is useful if we want the web server to know the real client IP.
    http-request set-header X-Client-IP %[src]
    reqirep ^Host: Host:\ 
    # This backend, named here "web1", directs to container "web1.lxd" (hostname).
    server storage storage.internal.0x07.pl:80 check




listen stats
    bind 10.40.0.106:80       #Listen on all IP's on port 9000
    mode http
    balance
    timeout client 5000
    timeout connect 4000
    timeout server 30000

    #This is the virtual URL to access the stats page
    stats uri /haproxy_stats

    #Authentication realm. This can be set to anything. Escape space characters with a backslash.
    stats realm HAProxy\ Statistics

    #The user/pass you want to use. Change this password!
    stats auth admin:admin

    #This allows you to take down and bring up back end servers.
    #This will produce an error on older versions of HAProxy.
    stats admin if TRUE